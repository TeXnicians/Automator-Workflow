<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>381</string>
	<key>AMApplicationVersion</key>
	<string>2.4</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>(*--Author: Libok Zhou (libk.8800.org, libkhorse@gmail.com). Feel free to contact me if you have questions about this script--Usage: This script is used for Automator to add an "new text file" to the context menu, 	     when you want to create a new text file in current folder of Finder*)tell application "Finder"	try		set currentFolder to (folder of the front window)		set currentPath to (POSIX path of (target of the front window as alias))		set currentPath2 to (target of the front window as alias)		set libkIsDeskTop to false	on error		set currentFolder to desktop		set currentPath to (POSIX path of (desktop as alias))		set libkIsDeskTop to true	end try	(*	set currentPath to (POSIX path of (target of the front window as alias))	set currentFolder to (folder of the front window)	*)			set txtName to text returned of (display dialog "Please enter the text name, " default answer "untitled.txt")		--if txtName is empty using "untitled.txt" as default	--no trailing extension, suffix with ".txt"	--have extension, don't touch it.	if length of txtName = 0 then		set ext to "txt"		set baseName to "untitled"		set txtName to "untitled.txt"	else		set prevTID to text item delimiters of AppleScript		set text item delimiters of AppleScript to "."		set libkNameParts to text items of txtName		set text item delimiters of AppleScript to prevTID				set len to length of libkNameParts		if len = 1 then			set ext to "txt"			set baseName to txtName			set txtName to baseName &amp; "." &amp; ext		else if len = 2 then			set ext to last text item of libkNameParts			set baseName to item 1 of libkNameParts as text		else			set ext to last text item of libkNameParts			set baseName to text 1 thru -((length of ext) + 1) of txtName		end if	end if				-- if the file name already exists in current folder, attach the "_n" to the filename	set n to 1	considering case		tell (get name of currentFolder's files) to repeat while txtName is in it			set txtName to baseName &amp; "_" &amp; n &amp; "." &amp; ext			set n to n + 1		end repeat	end considering			set newTxt to currentPath &amp; txtName	do shell script "touch '" &amp; newTxt &amp; "'"	set newTxt to POSIX file newTxt as string	if libkIsDeskTop is false then select the file txtName in currentFolder	tell application "TextEdit"		activate		open file newTxt	end tell	end tell</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>0E7AF07A-DB34-4032-95E3-E4C8D66A0158</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>55C310E9-F1C8-41D1-9749-FBD4C05BA3A2</string>
				<key>UUID</key>
				<string>2FA27E4E-8887-46A9-B3AF-E57FE367BF53</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>440.500000:472.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string></string>
		<key>serviceApplicationPath</key>
		<string></string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
